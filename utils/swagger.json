{
  "openapi": "3.0.0",
  "info": {
    "title": "Library API",
    "description": "API REST para Gestão de Usuários e Biblioteca Pessoal de Livros com Node.js, framework Express e banco de dados MySQL.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "Servidor Principal"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operações relacionadas aos usuários, como registro, login e gerenciamento de perfil."
    },
    {
      "name": "Books",
      "description": "Operações para gerenciar a biblioteca pessoal de livros de um usuário."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Registra um novo usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserInput" }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuário criado com sucesso." },
          "400": { "description": "Dados inválidos ou e-mail já existente." }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Autentica um usuário e retorna um token JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login bem-sucedido, retorna token." },
          "401": { "description": "Senha incorreta." },
          "404": { "description": "Usuário não encontrado." }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Retorna os dados do usuário autenticado",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Dados do usuário.", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } },
          "401": { "description": "Token inválido ou não fornecido." }
        }
      }
    },
    "/users/edit": {
      "put": {
        "tags": ["Users"],
        "summary": "Atualiza os dados do usuário autenticado",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdateInput" }
            }
          }
        },
        "responses": {
          "200": { "description": "Usuário atualizado com sucesso." },
          "400": { "description": "Dados inválidos." },
          "401": { "description": "Não autorizado." }
        }
      }
    },
    "/users/delete": {
      "delete": {
        "tags": ["Users"],
        "summary": "Exclui a conta do usuário autenticado",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Usuário excluído com sucesso." },
          "401": { "description": "Não autorizado." },
          "404": { "description": "Usuário não encontrado." }
        }
      }
    },
    "/books/register": {
      "post": {
        "tags": ["Books"],
        "summary": "Cadastra um novo livro para o usuário autenticado",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookInput" }
            }
          }
        },
        "responses": {
          "201": { "description": "Livro criado com sucesso." },
          "400": { "description": "Dados inválidos ou limites de livros atingidos." },
          "401": { "description": "Não autorizado." }
        }
      }
    },
    "/books/list": {
      "get": {
        "tags": ["Books"],
        "summary": "Lista e filtra os livros do usuário autenticado",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "in": "query", "name": "author", "schema": { "type": "string" }, "description": "Filtrar por nome do autor (busca parcial)." },
          { "in": "query", "name": "genre", "schema": { "type": "string" }, "description": "Filtrar por gênero." },
          { "in": "query", "name": "year", "schema": { "type": "integer" }, "description": "Filtrar por ano de publicação." },
          { "in": "query", "name": "status", "schema": { "type": "string" }, "description": "Filtrar por status de leitura." },
          { "in": "query", "name": "_sort", "schema": { "type": "string", "enum": ["title", "author", "year", "status", "create_date"] }, "description": "Campo para ordenação." },
          { "in": "query", "name": "_order", "schema": { "type": "string", "enum": ["asc", "desc"] }, "description": "Ordem da ordenação (ascendente ou descendente)." }
        ],
        "responses": {
          "200": { "description": "Lista de livros.", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Book" } } } } },
          "401": { "description": "Não autorizado." },
          "404": { "description": "Nenhum livro encontrado com os critérios especificados." }
        }
      }
    },
    "/books/edit/{id_book}": {
      "put": {
        "tags": ["Books"],
        "summary": "Edita um livro do usuário autenticado",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "in": "path", "name": "id_book", "required": true, "schema": { "type": "integer" }, "description": "ID do livro a ser editado." }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookUpdateInput" }
            }
          }
        },
        "responses": {
          "200": { "description": "Livro atualizado com sucesso." },
          "400": { "description": "Dados inválidos." },
          "401": { "description": "Não autorizado." },
          "404": { "description": "Livro não encontrado." }
        }
      }
    },
    "/books/delete/{id_book}": {
      "delete": {
        "tags": ["Books"],
        "summary": "Exclui um livro do usuário autenticado",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "in": "path", "name": "id_book", "required": true, "schema": { "type": "integer" }, "description": "ID do livro a ser excluído." }
        ],
        "responses": {
          "200": { "description": "Livro excluído com sucesso." },
          "401": { "description": "Não autorizado." },
          "404": { "description": "Livro não encontrado." }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id_user": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "john.doe@example.com" },
          "create_date": { "type": "string", "format": "date-time" }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "john.doe@example.com" },
          "password": { "type": "string", "description": "Mínimo 6 caracteres", "example": "password123" }
        },
        "required": ["name", "email", "password"]
      },
      "UserUpdateInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "John Doe Updated" },
          "email": { "type": "string", "example": "john.doe.new@example.com" },
          "password": { "type": "string", "description": "Mínimo 6 caracteres", "example": "newPassword456" }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id_book": { "type": "integer", "example": 101 },
          "title": { "type": "string", "example": "1984" },
          "author": { "type": "string", "example": "George Orwell" },
          "year": { "type": "integer", "example": 1949 },
          "genre": { "type": "string", "example": "Dystopian" },
          "status": { "type": "string", "example": "Lido" },
          "create_date": { "type": "string", "format": "date-time" }
        }
      },
      "BookInput": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "example": "Fahrenheit 451" },
          "author": { "type": "string", "example": "Ray Bradbury" },
          "year": { "type": "integer", "example": 1953 },
          "genre": { "type": "string", "example": "Science Fiction" }
        },
        "required": ["title", "author", "year", "genre"]
      },
      "BookUpdateInput": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "author": { "type": "string" },
          "year": { "type": "integer" },
          "genre": { "type": "string" },
          "status": { "type": "string", "enum": ["Lido", "Lendo", "Quero Ler", "Não Lido"], "example": "Lido" }
        }
      }
    }
  }
}